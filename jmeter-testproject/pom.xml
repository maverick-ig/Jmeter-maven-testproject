<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.example</groupId>
	<artifactId>jmeter-testproject</artifactId>
	<packaging>jar</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>jmeter-testproject</name>
	<url>http://maven.apache.org</url>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.maven/maven-plugin-api -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>3.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.jmeter</groupId>
			<artifactId>ApacheJMeter</artifactId>
			<version>5.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.jmeter/ApacheJMeter_core -->
		<dependency>
			<groupId>org.apache.jmeter</groupId>
			<artifactId>ApacheJMeter_core</artifactId>
			<version>5.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.jmeter/ApacheJMeter_http -->
		<dependency>
			<groupId>org.apache.jmeter</groupId>
			<artifactId>ApacheJMeter_http</artifactId>
			<version>5.0</version>
		</dependency>
	</dependencies>
	<properties>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
	</properties>
	<build>
		<plugins>
			<plugin>
				<!-- When the error states that "version 5 or 1.5" isn't supported, it's 
					saying that Maven is trying to compile the java code using the JDK (java 
					developer kit) version 1.5, and it's not supported. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<verbose>true</verbose>
					<fork>true</fork>
					<executable>${JAVA_HOME}/bin/javac</executable>
					<compilerVersion>11.0.1</compilerVersion>
				</configuration>
			</plugin>
			<plugin>
				<!-- place your JMeter load test in projdir -> src ->test ->jmeter -> 
					testfolder -> test.jmx -->
				<groupId>com.lazerycode.jmeter</groupId>
				<artifactId>jmeter-maven-plugin</artifactId>
				<version>2.8.1</version>
				<executions>
					<execution>
						<id>jmeter-tests</id>
						<goals>
							<goal>jmeter</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
						<!-- This configuraition is to specify jmeter script -->
						<!-- testFilesDirectory>/testfiles/${module}</testFilesDirectory> -->
						<testFilesIncluded>
							<jMeterTestFile>${jmeter_test_file}.jmx</jMeterTestFile>
						</testFilesIncluded>
						<resultsFileFormat>jtl</resultsFileFormat>
						<appendResultsTimestamp>false</appendResultsTimestamp>
						<!-- This configuraition is to specify jmeter script, number -->
							<!-- testFilesDirectory>/testfiles/${module}</testFilesDirectory>
							<testFilesIncluded>
								<jMeterTestFile>${jmeter_test_file}.jmx</jMeterTestFile>
							</testFilesIncluded> -->
							<!-- By default the test results are saved in a file /target/jmeter/results/<testname>-<timestamp>.jtl 
								Further processing is easier without timestamp though. -->
							<testResultsTimestamp>false</testResultsTimestamp>
							<propertiesUser>
								<!-- To simplify debugging, it is advisable to adapt the loglevel. 
									The jmeter logs are written to the file jmeter.log. -->
								<overrideRootLogLevel>DEBUG</overrideRootLogLevel>
								<!-- By default, the console output during a jmeter test run is suppressed. 
									We want to display the progress using the listener "Generate Summary Results" 
									(which periodically prints stats to stdout). Therefore we have to make sure, 
									that the jmeter output is not suppressed. -->
								<suppressJMeterOutput>false</suppressJMeterOutput>
								<!-- If tests fail (e.g. a http-request running into a timeout), 
									the corresponding maven goal also fails (and subsequent goals aren't executed 
									anymore). We want to create graphs from test-results, no matter if some requests 
									failed or not, so we ignore jmeter failures. -->
								<ignoreResultFailures>true</ignoreResultFailures>
								<Threadcount>${NUMBER_OF_USERS}</Threadcount>
								<Rampup>${ramp-up_period}</Rampup>
								<Loopcount>${LOOP_COUNT_DURATION}</Loopcount>
								<Startup>${start_up_delay}</Startup>
								<protocol>${protocol}</protocol>
								<Tokengenerator>${token_uri}</Tokengenerator>
								<tokengeneratorpath>${token_path}</tokengeneratorpath>
								<Applicationuri>${API_URI}</Applicationuri>
							</propertiesUser>
				</configuration>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>de.codecentric</groupId>
				<artifactId>jmeter-graph-maven-plugin</artifactId>
				<version>0.1.0</version>
				<executions>
					<execution>
						<id>create-graphs</id>
						<goals>
							<goal>create-graph</goal>
						</goals>
						<phase>verify</phase>
						<configuration>
							<inputFile>${project.build.directory}/jmeter/results/*.jtl</inputFile>
							<graphs>
								<graph>
									<pluginType>ThreadsStateOverTime</pluginType>
									<width>800</width>
									<height>600</height>
									<outputFile>${project.build.directory}/jmeter/results/ThreadsStateOverTime-${jmeter_test_file}_${NUMBER_OF_USERS}.png</outputFile>
								</graph>
								<graph>
									<pluginType>TransactionsPerSecond</pluginType>
									<width>800</width>
									<height>600</height>
									<outputFile>${project.build.directory}/jmeter/results/TransactionsPerSecond-${jmeter_test_file}_${NUMBER_OF_USERS}.png</outputFile>
								</graph>
								<graph>
									<pluginType>HitsPerSecond</pluginType>
									<width>800</width>
									<height>600</height>
									<outputFile>${project.build.directory}/jmeter/results/HitsPerSecond-${jmeter_test_file}_${NUMBER_OF_USERS}.png</outputFile>
								</graph>
								<graph>
									<pluginType>BytesThroughputOverTime</pluginType>
									<width>800</width>
									<height>600</height>
									<outputFile>${project.build.directory}/jmeter/results/BytesThroughputOverTime-${jmeter_test_file}_${NUMBER_OF_USERS}.png</outputFile>
								</graph>
								<graph>
									<pluginType>LatenciesOverTime</pluginType>
									<width>800</width>
									<height>600</height>
									<outputFile>${project.build.directory}/jmeter/results/LatenciesOverTime-${jmeter_test_file}_${NUMBER_OF_USERS}.png</outputFile>
								</graph>
								<graph>
									<pluginType>ResponseCodesPerSecond</pluginType>
									<width>800</width>
									<height>600</height>
									<outputFile>${project.build.directory}/jmeter/results/ResponseCodesPerSecond-${jmeter_test_file}_${NUMBER_OF_USERS}.png</outputFile>
								</graph>
								<graph>
									<pluginType>ResponseTimesDistribution</pluginType>
									<width>800</width>
									<height>600</height>
									<outputFile>${project.build.directory}/jmeter/results/ResponseTimesDistribution-${jmeter_test_file}_${NUMBER_OF_USERS}.png</outputFile>
								</graph>
								<graph>
									<pluginType>ResponseTimesPercentiles</pluginType>
									<width>800</width>
									<height>600</height>
									<outputFile>${project.build.directory}/jmeter/results/ResponseTimesPercentiles-${jmeter_test_file}_${NUMBER_OF_USERS}.png</outputFile>
								</graph>
								<graph>
									<pluginType>TimesVsThreads</pluginType>
									<width>800</width>
									<height>600</height>
									<outputFile>${project.build.directory}/jmeter/results/TimesVsThreads-${jmeter_test_file}_${NUMBER_OF_USERS}.png</outputFile>
								</graph>
								<graph>
									<pluginType>ThroughputVsThreads</pluginType>
									<width>800</width>
									<height>600</height>
									<outputFile>${project.build.directory}/jmeter/results/ThroughputVsThreads-${jmeter_test_file}_${NUMBER_OF_USERS}.png</outputFile>
								</graph>
								<graph>
									<pluginType>ResponseTimesOverTime</pluginType>
									<width>800</width>
									<height>600</height>
									<outputFile>${project.build.directory}/jmeter/results/${jmeter_test_file}_${NUMBER_OF_USERS}.png</outputFile>
								</graph>
							</graphs>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
